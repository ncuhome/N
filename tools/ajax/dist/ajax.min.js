/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.l = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };

/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};

/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};

/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

;(function (root, factory) {
  'use strict';

  if (( false ? 'undefined' : _typeof(exports)) === 'object') {
    exports = module.exports = factory;
  } else {
    root.promiseAjax = factory;
  }
})(undefined, function (conf) {
  'use strict';

  var methods = ['get', 'post', 'put', 'delete'];

  return methods.reduce(function (acc, method) {
    acc[method] = function (url, data, options) {
      options = options || {};
      options.method = method;
      options.url = url;
      options.data = data;
      return xhrConnection(options);
    };
    return acc;
  }, {});

  function xhrConnection(options) {
    var returnMethods = ['then', 'catch', 'always'];
    var promiseMethods = returnMethods.reduce(function (promise, method) {
      promise[method] = function (callback) {
        promise[method] = callback;
        return promise;
      };
      return promise;
    }, {});

    var xhr = new XMLHttpRequest();
    xhr.open(options.method, options.url, true);
    setHeaders(xhr, options.headers);
    xhr.addEventListener('readystatechange', ready(promiseMethods, xhr), false);
    xhr.send(objToStr(options.data));
    promiseMethods.abort = function () {
      return xhr.abort();
    };
    return promiseMethods;
  }

  function setHeaders(xhr, headers) {
    headers = headers || {};
    conf = conf || {};
    conf.headers = conf.headers || {};
    if (!hasContentType(headers)) {
      headers['Content-Type'] = 'application/json';
    }
    Object.keys(headers).forEach(function (name) {
      headers[name] && xhr.setRequestHeader(name, headers[name]);
    });
    Object.keys(conf.headers).forEach(function (name) {
      conf.headers[name] && xhr.setRequestHeader(name, conf.headers[name]);
    });
  }

  function hasContentType(headers) {
    return Object.keys(headers).some(function (name) {
      return name.toLowerCase() === 'content-type';
    });
  }

  function ready(promiseMethods, xhr) {
    return function handleReady() {
      if (xhr.readyState === xhr.DONE) {
        xhr.removeEventListener('readystatechange', handleReady, false);
        promiseMethods.always.apply(promiseMethods, parseReponse(xhr));

        if (xhr.status >= 200 && xhr.status < 300) {
          promiseMethods.then.apply(promiseMethods, parseReponse(xhr));
        } else {
          promiseMethods.catch.apply(promiseMethods, parseReponse(xhr));
        }
      }
    };
  }

  function parseReponse(xhr) {
    var result = void 0;
    try {
      result = JSON.parse(xhr.responseTExt);
    } catch (e) {
      result = xhr.response;
    }
    return [result, xhr];
  }

  function objToStr(data) {
    return isObj(data) ? getQueryString(data) : data;
  }

  function isObj(data) {
    return Object.prototype.toString.call(data) === '[object Object]';
  }

  function getQueryString(data) {
    return Object.keys(data).reduce(function (acc, item) {
      var prefix = !acc ? '' : acc + '&';
      return prefix + encodeURIComponent(item) + '=' + encodeURIComponent(data(item));
    });
  }
});

/***/ })
/******/ ]);